### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


"""Payload de autenticação"""
type AuthType {
  token: String!
  user: User!
}

scalar DateTime

"""Forma de efetuar um foolow em outro usuario"""
type Follow {
  current: User
  followId: Int!
  id: Int!
}

input FollowWhereUniqueInput {
  id: Int
}

type Mutation {
  """Criando um novo post"""
  creatPost(content: String, title: String!): Post!
  deletePost(where: PostWhereUniqueInput!): Post

  """Função para seguir um usuario"""
  followin(
    """Id do ususario a ser seguido!"""
    userFollowin: Int!
  ): Follow!

  """Athenticação no sistema, funcao que devolve um JWT"""
  login(
    """O email nao pode ser nullo"""
    email: String!

    """A senha nao pode ser nullo"""
    password: String!
  ): AuthType!

  """Criando ususario, encryptando senha e retornando um JWT"""
  signupUser(
    """O email nao pode ser nullo"""
    email: String!

    """O nome nao pode ser nullo"""
    name: String!

    """A senha nao pode ser nullo"""
    password: String!
  ): AuthType!
  unFollow(where: FollowWhereUniqueInput!): Follow
}

"""Posts dos usuarios"""
type Post {
  author: User
  content: String
  createdAt: DateTime!
  id: Int!
  title: String!
}

input PostWhereUniqueInput {
  id: Int
}

"""Consultas a API"""
type Query {
  """Recuperando os posts que foram publicados"""
  Feed: [Post!]!

  """Recuperando os meus posts para ser ezibidos no profile"""
  FeedProfile: [Post!]!

  """Procurando posts por titulo ou conteudo"""
  filterPosts(searchPost: String): [Post!]!

  """Trazendo todos os follows de um usuario"""
  Followers: [User!]!
  post(where: PostWhereUniqueInput!): Post
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, skip: Int): [User!]!
}

"""Usuario que possue os posts"""
type User {
  email: String!
  follows: [Follow!]!
  id: Int!
  name: String
  posts: [Post!]!
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
